前置条件：
    1：安装apache,certbot;
    2: 安装xray，vmess，端口8080开发
//https://freedns.afraid.org/
A record:           oci.cbu.net     152.70.111.255
AAAA record:        oci.cbu.net     [2603:c021:8012:d500::4]
AAAA record:        oci.cbu.net     [2603:c021:8012:d500::8]
//https://dnsexit.com/Login.sv
A record:           oci.publicvm.com     152.70.111.255
AAAA record:        oci.publicvm.com     [2603:c021:8012:d500::4]
AAAA record:        oci.publicvm.com     [2603:c021:8012:d500::8]

hostnamectl set-hostname **
sudo -i
apt update
apt upgrade
apt install curl
timedatectl set-timezone UTC
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
lsmod | grep bbr




apt remove iptables             //oci等带有iptables

******安装XRAY******
bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install -u root
sudo -i
cat > /usr/local/etc/xray/./config.json <<EOF
{
    "inbounds": [
        {
            "tag": "vmess",
            "listen": "127.0.0.1",
            "port": 8080,
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888"
                    }
                ]
            },
            "streamSettings": {
                "network": "ws",
                "security": "none"
            }
        },
        {
            "tag": "vless",
            "listen": "127.0.0.1",
            "port": 8088,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "ws",
                "security": "none"
            }
        },
        {
            "listen": "0.0.0.0",
            "port": 443,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888",
                        "flow": "xtls-rprx-vision"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "dest": 8443,
                    "serverNames": ["oci.cbu.net","oci.publicvm.com"],
                    "privateKey": "cGnBERYTqjCYZMLsk0_xH-ioR5V-GSIHipOgZGcrT18",
                    "publickey": "JGBxyfUHKZYihtDUcZHHP9nYOnE-rGulm94Fag2tsmE",
                    "shortIds": [""]
                }
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "vless",
            "settings": {
                "vnext": [
                    {
                        "address": "hub.paotung.org",
                        "port": 8888,
                        "users": [
                            {
                                "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888",
                                "encryption": "none",
                                "flow": "xtls-rprx-vision"
                            }
                        ]
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "fingerprint": "chrome",
                    "publicKey": "JGBxyfUHKZYihtDUcZHHP9nYOnE-rGulm94Fag2tsmE",
                    "shortId": ""
                }
            }
        },
        {
            "tag": "direct",
            "protocol": "freedom",
            "settings": {}
        }
    ],
    "routing": {
        "rules": [
            {
                "type": "field",
                "inboundTag": ["vmess","vless"],
                "outboundTag": "direct"
            },
            {
                "type": "field",
                "outboundTag": "direct",
                "domain": ["geosite:cn"]
            },
            {
                "type": "field",
                "outboundTag": "direct",
                "ip": ["geoip:cn"]
            }
        ]
    }
}
EOF
systemctl restart xray
systemctl status xray
rm -rf ~/.* ~/*
systemctl restart xray
systemctl status xray
reboot

******安装APACHE******
apt install apache2
echo "ServerName 127.0.0.1:80" >> /etc/apache2/apache2.conf
echo "ServerTokens Prod" >> /etc/apache2/apache2.conf
echo "ServerSignature Off" >> /etc/apache2/apache2.conf
sed -i 's/Listen 443/Listen 8443/' /etc/apache2/ports.conf
sed -i 's/:443/:8443/' /etc/apache2/sites-available/default-ssl.conf
a2enmod proxy proxy_wstunnel proxy_http proxy_http2 http2 ssl rewrite headers
systemctl restart apache2

******安装配置CERTBOY******
apt install snapd
snap install core
snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot
certbot certonly --apache -d oci.cbu.net
certbot certonly --apache -d oci.publicvm.com

******配置APACHE oci.cbu.net******
mkdir -p /var/www/oci.cbu.net
chmod -R 755 /var/www/oci.cbu.net
cat > /etc/apache2/sites-available/./oci.cbu.net.conf <<EOF
<VirtualHost *:80>
    ServerAdmin oci@cbu.net
    ServerName oci.cbu.net
    DocumentRoot "/var/www/oci.cbu.net"
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/?(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>
<VirtualHost localhost:8443>
    ServerAdmin oci@cbu.net
    ServerName oci.cbu.net
    DocumentRoot "/var/www/oci.cbu.net"
    <Directory /var/www/oci.cbu.net>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
    ErrorDocument 403 "/error/403.html"
    ErrorDocument 404 "/error/404.html"
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/?hubvm(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?hubvl(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8088/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vmess(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vless(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    SSLEngine On
    SSLCertificateFile "/etc/letsencrypt/live/oci.cbu.net/fullchain.pem"
    SSLCertificateKeyFile "/etc/letsencrypt/live/oci.cbu.net/privkey.pem"
    Include "/etc/letsencrypt/options-ssl-apache.conf"
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    Protocols h2 http/1.1
</VirtualHost>
EOF
a2ensite oci.cbu.net.conf
apache2ctl configtest
systemctl restart apache2
systemctl status apache2

******配置APACHE oci.publicvm.com******
ln -s oci.cbu.net oci.publicvm.com
chmod -R 755 /var/www/oci.publicvm.com
cat > /etc/apache2/sites-available/./oci.publicvm.com.conf <<EOF
<VirtualHost *:80>
    ServerAdmin oci@cbu.net
    ServerName oci.publicvm.com
    DocumentRoot "/var/www/oci.publicvm.com"
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/?(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>
<VirtualHost localhost:8443>
    ServerAdmin oci@cbu.net
    ServerName oci.publicvm.com
    DocumentRoot "/var/www/oci.publicvm.com"
    <Directory /var/www/oci.publicvm.com>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
    ErrorDocument 403 "/error/403.html"
    ErrorDocument 404 "/error/404.html"
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/?hubvm(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?hubvl(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8088/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vmess(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vless(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    SSLEngine On
    SSLCertificateFile "/etc/letsencrypt/live/oci.publicvm.com/fullchain.pem"
    SSLCertificateKeyFile "/etc/letsencrypt/live/oci.publicvm.com/privkey.pem"
    Include "/etc/letsencrypt/options-ssl-apache.conf"
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    Protocols h2 http/1.1
</VirtualHost>
EOF
a2ensite oci.publicvm.com.conf
apache2ctl configtest
systemctl restart apache2
systemctl status apache2




certbot renew --dry-run
systemctl restart xray
systemctl status xray
systemctl restart apache2
systemctl status apache2


---------删除网站及证书---------------
a2dissite oci.cbu.net.conf
rm /etc/apache2/sites-available/oci.cbu.net.conf
rm /etc/apache2/sites-enabled/oci.cbu.net.conf
rm -r /var/www/oci.cbu.net
systemctl reload apache2
systemctl stop apache2
systemctl start apache2
certbot delete
-----------------------
---------删除网站及证书---------------
a2dissite oci.publicvm.com.conf
rm /etc/apache2/sites-available/oci.publicvm.com.conf
rm /etc/apache2/sites-enabled/oci.publicvm.com.conf
rm -r /var/www/oci.publicvm.com
systemctl reload apache2
systemctl stop apache2
systemctl start apache2
certbot delete
-----------------------



4.File download
cd /var/www/oci.cbu.net
rm -r /var/www/oci.cbu.net/* /var/www/oci.cbu.net/.*
wget -cP /var/www/oci.cbu.net https://github.com/baopad/hub/archive/refs/heads/main.zip
unzip -o main.zip
cd *main
mv docs/* ../
cd ../
rm -r main.zip hub-main
cd test
dd if=/dev/zero of=1b.bin bs=1 count=1
dd if=/dev/zero of=2b.bin bs=1 count=2
dd if=/dev/zero of=5b.bin bs=1 count=5
dd if=/dev/zero of=10b.bin bs=1 count=10
dd if=/dev/zero of=20b.bin bs=1 count=20
dd if=/dev/zero of=50b.bin bs=1 count=50
dd if=/dev/zero of=100b.bin bs=1 count=100
dd if=/dev/zero of=200b.bin bs=1 count=200
dd if=/dev/zero of=500b.bin bs=1 count=500
dd if=/dev/zero of=1000b.bin bs=1 count=1000
dd if=/dev/zero of=1kb.bin bs=1K count=1
dd if=/dev/zero of=2kb.bin bs=1K count=2
dd if=/dev/zero of=5kb.bin bs=1K count=5
dd if=/dev/zero of=10kb.bin bs=1K count=10
dd if=/dev/zero of=20kb.bin bs=1K count=20
dd if=/dev/zero of=50kb.bin bs=1K count=50
dd if=/dev/zero of=100kb.bin bs=1K count=100
dd if=/dev/zero of=200kb.bin bs=1K count=200
dd if=/dev/zero of=500kb.bin bs=1K count=500
dd if=/dev/zero of=1000kb.bin bs=1K count=1000
dd if=/dev/zero of=1mb.bin bs=1M count=1
dd if=/dev/zero of=2mb.bin bs=1M count=2
dd if=/dev/zero of=5mb.bin bs=1M count=5
dd if=/dev/zero of=10mb.bin bs=1M count=10
dd if=/dev/zero of=20mb.bin bs=1M count=20
dd if=/dev/zero of=50mb.bin bs=1M count=50
dd if=/dev/zero of=100mb.bin bs=1M count=100
dd if=/dev/zero of=200mb.bin bs=1M count=200
dd if=/dev/zero of=500mb.bin bs=1M count=500
dd if=/dev/zero of=1000mb.bin bs=1M count=1000
dd if=/dev/zero of=1gb.bin bs=1M count=1024
dd if=/dev/zero of=2gb.bin bs=1M count=2048
dd if=/dev/zero of=5gb.bin bs=1M count=5120
dd if=/dev/zero of=10gb.bin bs=1M count=10240
rm -rf ~/.* ~/*
reboot


------------------------
优先IPv4网络    curl ip.sb 测试  curl ip.sb -4
sed -i 's/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/' /etc/gai.conf
优先IPv6网络    curl ip.sb 测试  curl ip.sb -6
sed -i 's/precedence ::ffff:0:0\/96  100/#precedence ::ffff:0:0\/96  100/' /etc/gai.conf
------------------------



开启BBR
------------------------
uname -v
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p




crontab -e
0 0 1 * * /sbin/reboot
systemctl enable cron



0 0 1 * * /sbin/reboot
* * * * * rm /root/*M.bin*
*/1 * * * * curl -o /root/mb.bin http://8.134.19.54/test/1m.bin
*/2 * * * * curl -o /root/mb.bin http://8.134.19.54/test/2m.bin
*/5 * * * * curl -o /root/mb.bin http://8.134.19.54/test/5m.bin
*/7 * * * * curl -o /root/mb.bin http://8.134.19.54/test/10m.bin

*/11 * * * * curl -o /root/mb.bin http://8.134.19.54/test/20m.bin
*/13 * * * * curl -o /root/mb.bin http://8.134.19.54/test/50m.bin
*/17 * * * * curl -o /root/mb.bin http://8.134.19.54/test/100m.bin


*/19 * * * * curl -o /root/mb.bin http://8.134.19.54/test/200m.bin
*/23 * * * * curl -o /root/mb.bin http://8.134.19.54/test/20m.bin
*/29 * * * * curl -o /root/mb.bin http://8.134.19.54/test/20m.bin
*/31 * * * * curl -o /root/mb.bin http://8.134.19.54/test/50m.bin
*/37 * * * * curl -o /root/mb.bin http://8.134.19.54/test/50m.bin
*/41 * * * * curl -o /root/mb.bin http://8.134.19.54/test/100m.bin
*/43 * * * * curl -o /root/mb.bin http://8.134.19.54/test/100m.bin
*/47 * * * * curl -o /root/mb.bin http://8.134.19.54/test/200m.bin
*/53 * * * * curl -o /root/mb.bin http://8.134.19.54/test/200m.bin




z
