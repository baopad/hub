前置条件：
    1：安装apache,certbot;
    2: 安装xray，vmess，端口8080开发
A record:           ali.donpau.com     8.134.19.54
AAAA record:        ali.donpau.com     [2001:470:18:a7b::2]


添加HE IPv6    https://tunnelbroker.net/  
TIPS: 如果是 NAT VPS 或 VPC 内网方案则需要将local字段后面的公网 IP 替换为内网 IP 。
获取命令：
ip route get 8.8.8.8 | grep -oP 'src \K\S+'

vi /etc/network/interfaces
auto ipv6
  iface ipv6 inet6 v4tunnel
    address 2001:470:18:a7b::2
    netmask 64
    endpoint 216.218.221.6
    local 172.31.66.33
    ttl 255
    gateway 2001:470:18:a7b::1
    up /sbin/ifconfig eth0 inet6 add 2001:470:18:a7b::4/64
    up /sbin/ifconfig eth0 inet6 add 2001:470:18:a7b::8/64

dns-nameservers 1.1.1.1 8.8.8.8 1.0.0.1 8.8.4.4

vi /etc/resolv.conf

systemctl restart networking
sed -i 's/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/' /etc/gai.conf


***win***
netsh interface teredo set state disabled
netsh interface ipv6 add v6v4tunnel interface=IP6Tunnel localaddress=172.31.66.33 remoteaddress=216.218.221.6
netsh interface ipv6 add address interface=IP6Tunnel address=2001:470:18:a7b::2
netsh interface ipv6 add route prefix=::/0 interface=IP6Tunnel nexthop=2001:470:18:a7b::1

apt remove iptables             //oci等带有iptables

sudo -i
apt update
apt install curl
timedatectl set-timezone UTC
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
lsmod | grep bbr
bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install -u root
cat > /usr/local/etc/xray/./config.json <<EOF
{
    "inbounds": [
        {
            "listen": "127.0.0.1",
            "port": 8080,
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888"
                    }
                ]
            },
            "streamSettings": {
                "network": "ws",
                "security": "none"
            }
        },
        {
            "listen": "127.0.0.1",
            "port": 8088,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "ws",
                "security": "none"
            }
        },
        {
            "listen": "0.0.0.0",
            "port": 88,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888"
                    }
                ],
                "decryption": "none",
                "fallbacks": [
                    {
                        "dest": 80
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none"
            }
        },
        {
            "listen": "127.0.0.1",
            "port": 8388,
            "protocol": "shadowsocks",
            "settings": {
                "password": "3a2cc75a-5fc1-4123-983b-7a1c86a10888",
                "method": "aes-128-gcm",
                "network": "tcp,udp",
                "security": "none"
            }
        },
        {
            "listen": "127.0.0.1",
            "port": 3128,
            "protocol": "http",
            "sniffing": {
                "enabled": true,
                    "destOverride": [
                        "http",
                        "tls"
                    ],
                "routeOnly": false
                },
            "settings": {
                "auth": "noauth",
                "udp": true,
                "allowTransparent": false
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "vless",
            "settings": {
                "vnext": [
                    {
                        "address": "hub.paotung.org",
                        "port": 443,
                        "users": [
                            {
                                "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888",
                                "encryption": "none"
                            }
                        ]
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "tls"
            }
        },
        {
            "tag": "static",
            "protocol": "vmess",
            "settings": {
                "vnext": [
                    {
                        "address": "cfp.paotung.org",
                        "port": 443,
                        "users": [
                            {
                                "id": "3a2cc75a-5fc1-4123-983b-7a1c86a10888",
                                "encryption": "none"
                            }
                        ]
                    }
                ]
            },
            "streamSettings": {
                "network": "ws",
                "security": "tls",
                "tlsSettings": {
                    "allowInsecure": false,
                    "show": false
                },
                "wsSettings": {
                    "path": "/vmess"
                }
            }
        },
        {
            "tag": "direct",
            "protocol": "freedom",
            "settings": {}
        }
    ],
    "routing": {
        "rules": [
            {
                "type": "field",
                "outboundTag": "static",
                "domain": [
                    "geosite:netflix",
                    "whoer.net"
                ]
            },
            {
                "type": "field",
                "outboundTag": "direct",
                "domain": [
                    "geosite:cn"
                ]
            },
            {
                "type": "field",
                "outboundTag": "direct",
                "ip": [
                    "geoip:private",
                    "geoip:cn"
                ]
            }
        ]
    }
}
EOF
systemctl restart xray
systemctl status xray
systemctl restart xray
systemctl status xray

systemctl restart xray
systemctl status xray
systemctl restart xray
systemctl status xray
reboot

******安装APACHE******
apt install apache2
a2enmod proxy proxy_wstunnel proxy_http proxy_http2 http2 ssl rewrite headers
echo "ServerName 127.0.0.1:80" >> /etc/apache2/apache2.conf
echo "ServerTokens Prod" >> /etc/apache2/apache2.conf
echo "ServerSignature Off" >> /etc/apache2/apache2.conf
sed -i 's/Listen 443/Listen 8443/' /etc/apache2/ports.conf
sed -i 's/:443/:8443/' /etc/apache2/sites-available/default-ssl.conf
systemctl restart apache2

******安装配置CERTBOY******
apt install snapd
snap install core
snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot
certbot certonly --apache -d ali.donpau.com

******配置APACHE******
mkdir -p /var/www/html
chmod -R 755 /var/www/html
cat > /etc/apache2/sites-available/./ali.donpau.com.conf <<EOF
<VirtualHost *:80>
    ServerAdmin baopad@yahoo.com
    ServerName ali.donpau.com
    DocumentRoot "/var/www/html"
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/?(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>
<VirtualHost *:8443>
    ServerAdmin baopad@yahoo.com
    ServerName ali.donpau.com
    DocumentRoot "/var/www/html"
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/?hubvm(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?hubvl(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://hub.paotung.org:8088/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vmess(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vless(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    RewriteCond %{HTTP:Upgrade} !=websocket [NC]
    SSLEngine On
    SSLCertificateFile "/etc/letsencrypt/live/ali.donpau.com/fullchain.pem"
    SSLCertificateKeyFile "/etc/letsencrypt/live/ali.donpau.com/privkey.pem"
    Include "/etc/letsencrypt/options-ssl-apache.conf"
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    Protocols h2 http/1.1
</VirtualHost>
EOF
a2ensite ali.donpau.com.conf
apache2ctl configtest
systemctl restart xray
systemctl restart apache2
rm -rf ~/.* ~/*
systemctl status xray
systemctl status apache2
reboot



续订
snap remove certbot
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot
certbot renew --dry-run

systemctl restart xray
systemctl status xray
systemctl restart apache2
systemctl status apache2

systemctl reload apache2
systemctl stop apache2
systemctl start apache2
systemctl reload apache2
systemctl status apache2






---------删除网站及证书---------------
a2dissite ali.donpau.com.conf
rm /etc/apache2/sites-available/ali.donpau.com.conf
rm /etc/apache2/sites-enabled/ali.donpau.com.conf
rm -r /var/www/ali.donpau.com
systemctl reload apache2
systemctl stop apache2
systemctl start apache2
certbot delete
-----------------------

4.File download
cd /var/www/html
rm -r /var/www/html/*
wget -cP /var/www/html https://github.com/baopad/hub/archive/refs/heads/main.zip
unzip -o main.zip
cd *main
mv docs/* ../
cd ../
rm -r main.zip hub-main
cd test
dd if=/dev/zero of=1b.bin bs=1 count=1
dd if=/dev/zero of=2b.bin bs=1 count=2
dd if=/dev/zero of=5b.bin bs=1 count=5
dd if=/dev/zero of=10b.bin bs=1 count=10
dd if=/dev/zero of=20b.bin bs=1 count=20
dd if=/dev/zero of=50b.bin bs=1 count=50
dd if=/dev/zero of=100b.bin bs=1 count=100
dd if=/dev/zero of=200b.bin bs=1 count=200
dd if=/dev/zero of=500b.bin bs=1 count=500
dd if=/dev/zero of=1000b.bin bs=1 count=1000
dd if=/dev/zero of=1kb.bin bs=1K count=1
dd if=/dev/zero of=2kb.bin bs=1K count=2
dd if=/dev/zero of=5kb.bin bs=1K count=5
dd if=/dev/zero of=10kb.bin bs=1K count=10
dd if=/dev/zero of=20kb.bin bs=1K count=20
dd if=/dev/zero of=50kb.bin bs=1K count=50
dd if=/dev/zero of=100kb.bin bs=1K count=100
dd if=/dev/zero of=200kb.bin bs=1K count=200
dd if=/dev/zero of=500kb.bin bs=1K count=500
dd if=/dev/zero of=1000kb.bin bs=1K count=1000
dd if=/dev/zero of=1mb.bin bs=1M count=1
dd if=/dev/zero of=2mb.bin bs=1M count=2
dd if=/dev/zero of=5mb.bin bs=1M count=5
dd if=/dev/zero of=10mb.bin bs=1M count=10
dd if=/dev/zero of=20mb.bin bs=1M count=20
dd if=/dev/zero of=50mb.bin bs=1M count=50
dd if=/dev/zero of=100mb.bin bs=1M count=100
dd if=/dev/zero of=200mb.bin bs=1M count=200
dd if=/dev/zero of=500mb.bin bs=1M count=500
dd if=/dev/zero of=1000mb.bin bs=1M count=1000
dd if=/dev/zero of=1gb.bin bs=1G count=1
dd if=/dev/zero of=2gb.bin bs=1G count=2
dd if=/dev/zero of=5gb.bin bs=1G count=5
dd if=/dev/zero of=10gb.bin bs=1G count=10





------------------------
优先IPv4网络    curl ip.sb 测试  curl ip.sb -4
sed -i 's/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/' /etc/gai.conf
优先IPv6网络    curl ip.sb 测试  curl ip.sb -6
sed -i 's/precedence ::ffff:0:0\/96  100/#precedence ::ffff:0:0\/96  100/' /etc/gai.conf
------------------------



开启BBR
------------------------
uname -v
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p


crontab -e
0 0 1 * * /sbin/reboot
*/5 * * * * wget -P /root https://hub.paotung.org/test/100M.bin
0 0 * * * rm /root/.* /root/*
0 12 * * * rm /root/.* /root/*

systemctl enable cron

* * * * * wget -P /root https://hub.paotung.org/test/10M.bin
0 */12 * * * rm /root/.* /root/*




0 0 * * * /sbin/reboot
1 10 * * * sed -i 's/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/' /etc/gai.conf
2 10 * * * systemctl restart networking
3 16 * * * sed -i 's/precedence ::ffff:0:0\/96  100/#precedence ::ffff:0:0\/96  100/' /etc/gai.conf
4 16 * * * systemctl restart networking
5 * * * * rm /root/* /root/.*
6 * * * * curl -o /root/10G.bin https://oci.cbu.net/test/10G.bin


0 4 * * * rm /root/* /root/.*
1 4 * * * curl -o /root/10G.bin https://oci.cbu.net/test/10G.bin
0 12 * * * rm /root/* /root/.*
1 12 * * * curl -o /root/10G.bin https://oci.cbu.net/test/10G.bin
0 18 * * * rm /root/* /root/.*
1 18 * * * curl -o /root/10G.bin https://oci.cbu.net/test/10G.bin
0 22 * * * rm /root/* /root/.*
1 22 * * * curl -o /root/10G.bin https://oci.cbu.net/test/10G.bin















wget -cP /etc/letsencrypt/live/www.donpau.com https://raw.githubusercontent.com/baopad/hub/main/config/certbot/www.donpau.com/fullchain.pem
wget -cP /etc/letsencrypt/live/www.donpau.com https://raw.githubusercontent.com/baopad/hub/main/config/certbot/www.donpau.com/privkey.pem


