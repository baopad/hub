前置条件：
    1：安装apache,certbot;
    2: 安装xray，vmess，端口8080开发
A record:           oci.us.to     66.152.171.78
AAAA record:        oci.us.to     [2603:c021:8012:d500:fc94:d9af:5022:ac62]


设置UTC时间
sudo -i
apt update
apt install curl
timedatectl set-timezone UTC
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
lsmod | grep bbr


apt remove iptables             //oci等带有iptables


apt install apache2
a2enmod proxy proxy_wstunnel proxy_http proxy_http2 http2 ssl rewrite headers
echo "ServerName 127.0.0.1:80" >> /etc/apache2/apache2.conf
echo "ServerTokens Prod" >> /etc/apache2/apache2.conf
echo "ServerSignature Off" >> /etc/apache2/apache2.conf
mkdir -p /var/www/oci.us.to
chmod -R 755 /var/www/oci.us.to

apt install snapd
snap install core
snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot
certbot certonly --apache -d oci.us.to

cat > /etc/apache2/sites-available/./oci.us.to.conf <<EOF
<VirtualHost *:80>
    ServerAdmin oci@us.to
    ServerName oci.us.to
    DocumentRoot "/var/www/oci.us.to"
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/?(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>
<VirtualHost *:443>
    ServerAdmin oci@us.to
    ServerName oci.us.to
    DocumentRoot "/var/www/oci.us.to"
    <Directory /var/www/>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
    ErrorDocument 403 "/error/403.html"
    ErrorDocument 404 "/error/404.html"
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/?vmess(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8080/$1" [P,L]
    RewriteCond %{REQUEST_URI} ^/?vless(.*)$ [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) "ws://localhost:8088/$1" [P,L]
    SSLEngine On
    SSLCertificateFile "/etc/letsencrypt/live/oci.us.to/fullchain.pem"
    SSLCertificateKeyFile "/etc/letsencrypt/live/oci.us.to/privkey.pem"
    Include "/etc/letsencrypt/options-ssl-apache.conf"
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    Protocols h2 http/1.1
</VirtualHost>
EOF
a2ensite oci.us.to.conf
apache2ctl configtest
systemctl reload apache2
systemctl stop apache2
systemctl start apache2
systemctl reload apache2
systemctl restart apache2
systemctl status apache2
certbot renew --dry-run




---------删除网站及证书---------------
a2dissite oci.us.to.conf
rm /etc/apache2/sites-available/oci.us.to.conf
rm /etc/apache2/sites-enabled/oci.us.to.conf
rm -r /var/www/oci.us.to
systemctl reload apache2
systemctl stop apache2
systemctl start apache2
certbot delete
-----------------------

4.File download
cd /var/www/hub.paotung.org
rm -r /var/www/hub.paotung.org/*
wget -cP /var/www/hub.paotung.org https://github.com/baopad/hub/archive/refs/heads/main.zip
unzip -o main.zip
cd *main
mv docs/* ../
cd ../
rm -r main.zip hub-main
cd test
dd if=/dev/zero of=1K.bin bs=1K count=1
dd if=/dev/zero of=5K.bin bs=1K count=5
dd if=/dev/zero of=10K.bin bs=1K count=10
dd if=/dev/zero of=50K.bin bs=1K count=50
dd if=/dev/zero of=100K.bin bs=1K count=100
dd if=/dev/zero of=500K.bin bs=1K count=500
dd if=/dev/zero of=1000K.bin bs=1K count=1000
dd if=/dev/zero of=1M.bin bs=1M count=1
dd if=/dev/zero of=5M.bin bs=1M count=5
dd if=/dev/zero of=10M.bin bs=1M count=10
dd if=/dev/zero of=50M.bin bs=1M count=50
dd if=/dev/zero of=100M.bin bs=1M count=100
dd if=/dev/zero of=500M.bin bs=1M count=500
dd if=/dev/zero of=1000M.bin bs=1M count=1000
dd if=/dev/zero of=1G.bin bs=1G count=1
dd if=/dev/zero of=5G.bin bs=1G count=5
dd if=/dev/zero of=10G.bin bs=1G count=10


------------------------
优先IPv4网络    curl ip.sb 测试  curl ip.sb -4
sed -i 's/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/' /etc/gai.conf
优先IPv6网络    curl ip.sb 测试  curl ip.sb -6
sed -i 's/precedence ::ffff:0:0\/96  100/#precedence ::ffff:0:0\/96  100/' /etc/gai.conf
------------------------


crontab -e
0 0 1 * * /sbin/reboot
systemctl enable cron

开启BBR
------------------------
uname -v
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
lsmod | grep bbr
------------------------
